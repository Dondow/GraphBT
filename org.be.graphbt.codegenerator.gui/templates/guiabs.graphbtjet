 <%@ jet package="org.be.graphbt.codegenerator.gui.template" class="GraphBTABSGuiTemplate" imports="org.be.graphbt.model.graphbt.* import org.eclipse.emf.common.util.*;"%>
<%BEModel model = (BEModel) argument; %>
<%if(model.getLayoutList()==null) return null;%>

<%EList<Layout> layouts = model.getLayoutList().getLayouts(); %>

package [P];
import java.io.*;
import java.util.*;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.*;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.*;
import abs.backend.java.lib.types.*;
import BTObjects.*;

import [P].GUIImpl_c;

public class GUIImpl_fli extends GUIImpl_c {
	private Display display;
	private Shell shell;
	private Composite comp;
	Object locker = new Object();
	String cId;
	String sName;
	
	private HashMap<String, Control> widgets = new HashMap<String, Control>();
 	public synchronized ABSUnit fli_show() {
		Runnable run = new Runnable() {
			@Override
			public void run() {
			 	initialize();
			}
		};
		Thread t = new Thread(run);
		t.start();
		fli_loop();
	 	return ABSUnit.UNIT;
 	} 

	public void call(String cId) {
		//System.out.println("current thread in method call "+currentThread.getName());
		if(cId==null)
			return;
		Component_i component = GUIImpl_fli.this.getComponent(abs.backend.java.lib.types.ABSString.fromString(cId));
		component.async_click();
		locker = null;
	}
	public synchronized ABSUnit fli_loop() {
		locker = new Object();
		while(true) {
		    // call action to start N threads
			if(locker==null)
		    	break;
		    synchronized(locker) {
		    	call(cId);
		    }
		}
	 	return ABSUnit.UNIT;
	}
	
 	public void initialize(){
 	try {
		this.display = new Display();
		this.shell = new Shell(display);
		comp = new Composite(shell, SWT.NULL);
		shell.setText("GUI");
		<%for (int i = layouts.size()-1; i >= 0 ; i--) { %>
		<%Layout l = layouts.get(i);%>
		File file<%=l.getCRef()%> = new File("resource/<%=l.getCRef()%>.jpg");
		Image image<%=l.getCRef()%> = new Image(display, new FileInputStream(file<%=l.getCRef()%>));
		<%if(l.getCRef().startsWith("CBUTTON")) {%>
		final Button button<%=l.getCRef()%> = new Button(comp, SWT.NULL);
		widgets.put("<%=l.getCRef()%>",button<%=l.getCRef()%>);
		button<%=l.getCRef()%>.setImage(image<%=l.getCRef()%>);
		button<%=l.getCRef()%>.setBounds(image<%=l.getCRef()%>.getBounds());	
	   	button<%=l.getCRef()%>.setLocation(<%=l.getX()%>,<%=l.getY()%>);
	   	button<%=l.getCRef()%>.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent event) {
				System.out.println("Clicked");
				synchronized(locker) {
					cId = "<%=l.getCRef()%>";
					locker.notify();
				}
			}
		});
		<%} else {%>
		final Label label<%=l.getCRef()%> = new Label(comp, SWT.NULL);
		widgets.put("<%=l.getCRef()%>",label<%=l.getCRef()%>);	
		label<%=l.getCRef()%>.setImage(image<%=l.getCRef()%>);
		label<%=l.getCRef()%>.setBounds(image<%=l.getCRef()%>.getBounds());	
	   	label<%=l.getCRef()%>.setLocation(<%=l.getX()%>,<%=l.getY()%>);	
	   	<%}}%>
		comp.pack();
		shell.open();
		while(!shell.isDisposed()) {
			if(!display.readAndDispatch()) {
				display.sleep();
			}
		}
 		display.dispose();
 	} catch (Exception e) {
 	}
 		
 	}
 	
  	public ABSUnit fli_dispose() {
 		display.dispose();
 		return abs.backend.java.lib.types.ABSUnit.UNIT;
 	}
 	
 	public synchronized  ABSUnit fli_setState(ABSString componentName, ABSString stateName) {
 	System.out.println("In set state");
 			if (display == null || display.isDisposed()) 
            return abs.backend.java.lib.types.ABSUnit.UNIT;
        	final String c = componentName.getString();
 			final String s = stateName.getString();
 			
	        display.asyncExec(new Runnable() {
	            public void run() {
	            try {
		 			File file = new File("resource/"+c+"-"+s+".jpg");
					Image image = new Image(display, new FileInputStream(file));
					Control w = widgets.get(c);
					if(w instanceof Button) {
						((Button) w).setImage(image);				
					}
					else if(w instanceof Label) {
						((Label) w).setImage(image);
					}
					comp.pack();
					} catch (Exception e) { }	                
	            }
	        });
		
 		return abs.backend.java.lib.types.ABSUnit.UNIT;
 	}
 }